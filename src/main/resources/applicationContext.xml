<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <context:component-scan base-package="com.rain">
        <!-- 解决Spring和SpringMVC扫描注解类的冲突问题 -->
        <!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
        <context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
    </context:component-scan>

    <!-- spring的配置文件和业务逻辑有关 -->
    <context:property-placeholder location="classpath:system.properties" />

    <!-- 数据源 -->
    <bean id="pooledDataSource"
          class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${dataSource.driverClassName}"></property>
        <property name="jdbcUrl" value="${dataSource.url}"></property>
        <property name="username" value="${dataSource.username}"></property>
        <property name="password" value="${dataSource.password}"></property>
    </bean>

    <!-- 配置和mybatis的整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置文件的位置s  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!-- 指定mybatis mapper文件的位置  -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描素有的dao接口的实现，加入到容器中  -->
        <property name="basePackage" value="com.rain.dao"></property>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

    <!-- 注解式事务          -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  -->
    <!--   开启基于注解的事务   -->
    <!-- <aop:config>
        切入点表达式
        <aop:pointcut
            expression="execution(* cn.com.yusys.ssmp.service..*(..))"
            id="txPoint"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
    </aop:config> -->
    <!--  配置事务增强  -->
    <!-- <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="*" />
            <tx:method name="get*" read-only="true" />
        </tx:attributes>
    </tx:advice> -->
</beans>