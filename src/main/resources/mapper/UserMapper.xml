<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rain.dao.UserDao">

    <resultMap id="userList" type="com.rain.model.User">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, email, username, role, mobile, password
    </sql>

    <select id="queryUserById" resultMap="userList">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user WHERE
         id = #{id}
    </select>

    <select id="queryAll" resultMap="userList">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <insert id="insertUser" parameterType="com.rain.model.User">
        insert into user (
        id,
        email,
        username,
        role,
        mobile,
        password
        )
        values (
        #{id},
        #{email},
        #{username},
        #{role},
        #{mobile},
        #{password}
        )
    </insert>

    <update id="updateUserById" parameterType="com.rain.model.User">
        update user
        <trim prefix = "set" suffixOverrides=",">
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="role != null and role != ''">role = #{role},</if>
            <if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
            <if test="password != null and password != ''">password = #{password},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="com.rain.model.User">
        delete from user where id = #{id}
    </delete>

    <select id="queryUserByPage" resultMap="userList">
        select
        <include refid="Base_Column_List"></include>
        from user
        limit #{page},#{pageSize}
    </select>

    <select id="checkUserName" resultType="int" parameterType="string">
        select count(1) from user where username  = #{username};
    </select>

    <select id="checkPassword" resultMap="userList">
        select
        <include refid="Base_Column_List"></include>
        from user
        where username = #{username} and password = #{password}
    </select>
</mapper>